"use strict"
const request = require('request');
function exRequest(url) {
  return new Promise(function (resolve, reject) {
    request(url, function (APIerror, rsp, body) {
      if (rsp.statusCode !== 200 || APIerror) {
        reject({ 'error': APIerror, 'rsp': { 'statusCode': rsp.statusCode, 'statusMessage': rsp.statusMessage } })
      };
      resolve(body);
    });
  });
};
/**
 * @typedef rsp 
 * @prop {Number} statusCode 
 * @prop {String} statusMessage
 */
/**
 * @typedef CalledBack
 * @prop {String} error
 * @prop {rsp} rsp
 * @prop {String} url URl of IMDB page
 * @prop {String} name Name of show
 * @prop {String} image URL of poster
 */
/**
 * Gets something to watch from IMDB
 * @param {Function} callBack Callback fucntion
 * @returns {CalledBack} 
 */
const randomimdb = async function (callBack) {
  let imdb = await exRequest('http://www.imdb.com/random/title?ref_=helpms_ih_gi_siteindex').then((body) => {
    body = body.split('\n');
    callBack({
      'rsp': {
        'statusCode': 200,
        'statusMessage': 'OK'
      },
      'url': body[54].replace('<meta property="og:url" content="', '').replace('" />', '').replace(/  /g, ''),
      'name': body[40].replace('<title>', '').replace(' - IMDb<\/title>', '').replace(/  /g, '').replace(/&qout;/g, ''),
      'image': body[88].replace(`<link rel='image_src' href="`, '').replace('">', '').replace(/  /g, '')
    });
  }, (reason) => {
    callBack({
      'error': reason.error,
      'rsp': {
        'statusCode': reason.rsp.statusCode,
        'statusMessage': reason.rsp.statusMessage
      }
    });
  });
};
module.exports = randomimdb;